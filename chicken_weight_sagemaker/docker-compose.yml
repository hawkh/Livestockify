version: '3.8'

services:
  chicken-weight-estimator:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: chicken-weight-estimator:latest
    container_name: chicken-weight-estimator
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    volumes:
      # Mount model artifacts directory (for real models)
      - ./model_artifacts:/app/model_artifacts:ro
      # Mount logs directory
      - ./logs:/app/logs
      # Mount config directory (optional override)
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - chicken-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: chicken-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - chicken-weight-estimator
    restart: unless-stopped
    networks:
      - chicken-network
    profiles:
      - production

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: chicken-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - chicken-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: chicken-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - chicken-network
    profiles:
      - monitoring

networks:
  chicken-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: